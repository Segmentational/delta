{"version":3,"sources":["pages/Login/SCSS/Index.module.scss","components/Types/index.js","components/Types/Button.js","components/Types/Input-Field.js","pages/Login/Authentication.js","pages/Login/Form.js","pages/Login/Page.js","pages/Login/index.js"],"names":["module","exports","Types","Button","Kind","primary","secondary","ghost","tertiary","danger","normal","Attributes","as","button","props","children","className","dangerDescription","disabled","hasIconOnly","href","iconDescription","isExpressive","isSelected","kind","onBlur","onClick","onFocus","onMouseEnter","onMouseLeave","renderIcon","role","size","tabIndex","tooltipAlignment","tooltipPosition","type","Values","propTypes","Input","checkbox","color","date","datetime","email","file","hidden","image","month","number","password","radio","range","reset","search","submit","tel","text","time","url","week","Authorizer","URL","Store","Forage","createInstance","name","storeName","description","Authenticate","Payload","Handler","a","Return","Data","Loading","Error","Status","Code","Message","console","debug","$","Request","post","Grant","Username","Password","cancelToken","token","then","data","headers","Headers","status","statusText","trace","setItem","e","value","error","cancel","clear","finally","Component","navigate","useNavigate","useState","awaiting","setAwaiting","validUsername","setValidUsername","validPassword","setValidPassword","useEffect","document","getElementById","Submit","autofocus","focus","click","addEventListener","event","preventDefault","isTrusted","eventPhase","composedPath","timeStamp","key","addEventListeners","handlePasswordFieldChanges","Validation","String","length","classList","toggle","removeAttribute","remove","getElementsByClassName","item","handleUsernameFieldChanges","Awaitable","id","Styles","onSubmit","toggleAttribute","contentEditable","Transmission","CancelToken","source","API","Response","warn","log","JSON","stringify","catch","legendText","join","invalid","inline","invalidText","labelText","autoComplete","hideLabel","onChange","Form","Page","Properties","lg","md","sm","defaultProps"],"mappings":"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","file":"static/js/22.eec6baf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Index_form__1NCKm\",\"fields\":\"Index_fields__3weEF\",\"normalized\":\"Index_normalized__v75ct\",\"field\":\"Index_field__2bfls\",\"footer\":\"Index_footer__1S7b1\",\"button\":\"Index_button__c6Osp\",\"notification\":\"Index_notification__2APeM\",\"container\":\"Index_container__PZsay\"};","import { default as Button } from \"./Button\";\n\nimport { default as Input } from \"./Input-Field\";\n\nexport const Types = {\n    Button,\n    Input\n};\n\nexport default Types;\n","import PropTypes from \"prop-types\";\n\nimport {ButtonKinds} from \"carbon-components-react/lib/prop-types/types\";\n\nimport deprecate from \"carbon-components-react/lib/prop-types/deprecate\";\n\nimport { default as button } from \"carbon-components-react/es/components/Button/Button\"\n\n// const Defaults = {\n    /// as: button.propTypes.ref(\"as\"),\n    /// children: button.props.children,\n    /// className: button.props.className,\n    /// dangerDescription: button.props.dangerDescription,\n//     disabled: false,\n//     hasIconOnly: false,\n//     href: button.props.href,\n//     iconDescription: button.props.iconDescription,\n//     isExpressive: button.props.isExpressive,\n//     isSelected: button.props.isSelected,\n//     kind: button.props.kind,\n//     onBlur: button.props.onBlur,\n//     onClick: button.props.onClick,\n//     onFocus: button.props.onFocus,\n//     onMouseEnter: button.props.onMouseEnter,\n//     onMouseLeave: button.props.onMouseLeave,\n//     renderIcon: button.props.renderIcon,\n//     role: button.props.role,\n//     size: button.props.size,\n//     tabIndex: button.props.tabIndex,\n//     tooltipAlignment: button.props.tooltipAlignment,\n//     tooltipPosition: button.props.tooltipPosition,\n//     type: button.props.type,\n//     keys: button.props.keys,\n// }\n\n/***\n *\n * @param as\n * @param children\n * @param className\n * @param dangerDescription\n * @param disabled\n * @param hasIconOnly\n * @param href\n * @param iconDescription\n * @param isExpressive\n * @param isSelected\n * @param kind\n * @param onBlur\n * @param onClick\n * @param onFocus\n * @param onMouseEnter\n * @param onMouseLeave\n * @param renderIcon\n * @param role\n * @param size\n * @param tabIndex\n * @param tooltipAlignment\n * @param tooltipPosition\n * @param type\n *\n * @returns {JSX.Element}\n *\n * @constructor\n *\n */\n\nexport const Button = (\n    {\n        as = button.props?.as,\n        children = button.props?.children,\n        className = button.props?.className,\n        dangerDescription = button.props?.dangerDescription,\n        disabled = button.props?.disabled,\n        hasIconOnly = button.props?.hasIconOnly,\n        href = button.props?.href,\n        iconDescription = button.props?.iconDescription,\n        isExpressive = button.props?.isExpressive,\n        isSelected = button.props?.isSelected,\n        kind = button.props?.kind,\n        onBlur = button.props?.onBlur,\n        onClick = button.props?.onClick,\n        onFocus = button.props?.onFocus,\n        onMouseEnter = button.props?.onMouseEnter,\n        onMouseLeave = button.props?.onMouseLeave,\n        renderIcon = button.props?.renderIcon,\n        role = button.props?.role,\n        size = button.props?.size,\n        tabIndex = button.props?.tabIndex,\n        tooltipAlignment = button.props?.tooltipAlignment,\n        tooltipPosition = button.props?.tooltipPosition,\n        type = button.props?.type,\n    }\n) => {\n\n    const Values = {\n        as,\n        children,\n        className,\n        dangerDescription,\n        disabled,\n        hasIconOnly,\n        href,\n        iconDescription,\n        isExpressive,\n        isSelected,\n        kind,\n        onBlur,\n        onClick,\n        onFocus,\n        onMouseEnter,\n        onMouseLeave,\n        renderIcon,\n        role,\n        size,\n        tabIndex,\n        tooltipAlignment,\n        tooltipPosition,\n        type\n    };\n\n    return (\n        <Button {... Values}/>\n    );\n}\n\nButton.propTypes = {\n    /**\n     * Specify how the button itself should be rendered.\n     * Make sure to apply all props to the root node and render children appropriately\n     */\n    as: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.elementType]),\n\n    /**\n     * Specify the content of your Button\n     */\n    children: PropTypes.node,\n\n    /**\n     * Specify an optional className to be added to your Button\n     */\n    className: PropTypes.string,\n\n    /**\n     * Specify the message read by screen readers for the danger button variant\n     */\n    dangerDescription: PropTypes.string,\n\n    /**\n     * Specify whether the Button should be disabled, or not\n     */\n    disabled: PropTypes.bool,\n\n    /**\n     * Specify if the button is an icon-only button\n     */\n    hasIconOnly: PropTypes.bool,\n\n    /**\n     * Optionally specify an href for your Button to become an `<a>` element\n     */\n    href: PropTypes.string,\n\n    /**\n     * If specifying the `renderIcon` prop, provide a description for that icon that can\n     * be read by screen readers\n     */\n    iconDescription: function iconDescription(props) {\n        if (props.renderIcon && !props.children && !props.iconDescription) {\n            return new Error(\"renderIcon property specified without also providing an iconDescription property.\");\n        }\n\n        return undefined;\n    },\n\n    /**\n     * Specify whether the Button is expressive, or not\n     */\n    isExpressive: PropTypes.bool,\n\n    /**\n     * Specify whether the Button is currently selected\n     */\n    isSelected: PropTypes.bool,\n\n    /**\n     * Specify the kind of Button you want to create\n     */\n    kind: PropTypes.oneOf(ButtonKinds).isRequired,\n\n    /**\n     * Provide an optional function to be called when the button element\n     * loses focus\n     */\n    onBlur: PropTypes.func,\n\n    /**\n     * Provide an optional function to be called when the button element\n     * is clicked\n     */\n    onClick: PropTypes.func,\n\n    /**\n     * Provide an optional function to be called when the button element\n     * receives focus\n     */\n    onFocus: PropTypes.func,\n\n    /**\n     * Provide an optional function to be called when the mouse\n     * enters the button element\n     */\n    onMouseEnter: PropTypes.func,\n\n    /**\n     * Provide an optional function to be called when the mouse\n     * leaves the button element\n     */\n    onMouseLeave: PropTypes.func,\n\n    /**\n     * Optional prop to allow overriding the icon rendering.\n     * Can be a React component class\n     */\n    renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n    /**\n     * Optional prop to specify the role of the Button\n     */\n    role: PropTypes.string,\n\n    /**\n     * Specify the size of the button, from a list of available sizes.\n     * For `default` buttons, this prop can remain unspecified or use `default`.\n     * In the next major release of Carbon, `default`, `field`, and `small` will be removed\n     */\n    size: PropTypes.oneOf([\"default\", \"field\", \"small\", \"sm\", \"md\", \"lg\", \"xl\", \"2xl\"]),\n\n    /**\n     * Optional prop to specify the tabIndex of the Button\n     */\n    tabIndex: PropTypes.number,\n\n    /**\n     * Specify the alignment of the tooltip to the icon-only button.\n     * Can be one of: start, center, or end.\n     */\n    tooltipAlignment: PropTypes.oneOf([\"start\", \"center\", \"end\"]),\n\n    /**\n     * Specify the direction of the tooltip for icon-only buttons.\n     * Can be either top, right, bottom, or left.\n     */\n    tooltipPosition: PropTypes.oneOf([\"top\", \"right\", \"bottom\", \"left\"]),\n\n    /**\n     * Optional prop to specify the type of the Button\n     */\n    type: PropTypes.oneOf([\"button\", \"reset\", \"submit\"]),\n\n    keys: () => Object.keys(Button.propTypes)\n};\n\nexport const Types = {\n    Kind: {\n        primary: \"primary\",\n        secondary: \"secondary\",\n        ghost: \"ghost\",\n        tertiary: \"tertiary\",\n        danger: {\n            normal: \"danger\",\n            primary: \"danger--primary\",\n            ghost: \"danger--ghost\",\n            tertiary: \"danger--tertiary\"\n        }\n    },\n    Attributes: {\n        Types: Button.propTypes\n    }\n};\n\nexport default Types;\n","const Types = {\n    button: \"button\",\n    checkbox: \"checkbox\",\n    color: \"color\",\n    date: \"date\",\n    datetime: \"datetime-local\",\n    email: \"email\",\n    file: \"file\",\n    hidden: \"hidden\",\n    image: \"image\",\n    month: \"month\",\n    number: \"number\",\n    password: \"password\",\n    radio: \"radio\",\n    range: \"range\",\n    reset: \"reset\",\n    search: \"search\",\n    submit: \"submit\",\n    tel: \"tel\",\n    text: \"text\",\n    time: \"time\",\n    url: \"url\",\n    week: \"week\"\n}\n\nexport default Types;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import Request from \"axios\";\nimport Forage from \"localforage\";\n\nconst STORE = \"JWT\";\nconst NAME = \"Nexus-UI\";\nconst DESCRIPTION = \"Nexus Dashboard Login State\";\n\nconst Debug = (\n    \"production\" !== process.env[\"NODE_ENV\"]\n);\n\nconst URL = process.env.REACT_APP_API_ENDPOINT;\n\n/***\n * API Basic Authentication Endpoint + JWT Generator\n *\n * The following URL -- upon successful authentication -- will return a newly\n * generated JWT authorization token.\n *\n * @type {string}\n *\n */\n\n    /// const Authorizer = URL + \"/API/Authentication/Guarantee\";\nconst Authorizer = URL + \"/v1/authorization/login\";\n\n/***\n * HTTP Request Cancellation Handler\n *\n * Without the following cancellation token, React-based front-ends will warn\n * against memory leaks; additionally, the cancellation token is used to avoid\n * difficult to debug errors and endless request loops.\n *\n * @type {function(): CancelTokenSource}\n *\n */\n\nexport const Cancellation = () => Request.CancelToken.source();\n\nexport const Store = Forage.createInstance({\n    name: NAME,\n    storeName: STORE,\n    description: DESCRIPTION\n});\n\n/***\n *\n * Authentication Entry Point\n *\n * @param Payload {{Username: null|String, Password: null|String}}\n * @param Handler {CancelTokenSource}\n *\n * @returns {Promise<null|{Loading: boolean, Data: null, Error: boolean}>}\n *\n * @constructor\n *\n */\n\nexport const Authenticate = async (Payload, Handler) => {\n    const Return = {\n        Data: null,\n        Loading: true,\n        Error: false,\n        Status: {\n            Code: -1,\n            Message: \"\"\n        }\n    };\n\n    (Debug)\n        ? console.log(\"[Trace] Submitting Authentication Payload\", Payload)\n        : console.debug(\"[Trace] Submitting Authentication Payload ...\");\n\n    const $ = async () => await Request.post(Authorizer, {\n        Grant: \"Password\",\n        Username: Payload.Username,\n        Password: Payload.Password\n    }, {\n        cancelToken: Handler.token\n    }).then((Data) => {\n        console.debug(\"[Debug] Response Data\", Data);\n        console.debug(\"[Debug] JWT Authorization Data\", Data.data);\n        console.debug(\"[Debug] JWT Authorization Return Headers\", Data.headers);\n\n        Return.Error = false;\n        Return.Data = {\n            Payload: Data.data,\n            Headers: Data.headers,\n            Status: {\n                Code: Data.status,\n                Message: Data.statusText\n            }\n        };\n\n        Return.Status.Code = Data.status;\n        Return.Status.Message = Data.statusText;\n\n        try {\n            console.trace(\"[Trace] Authentication Object\", Return);\n            console.debug(\"[Debug]\", \"JWT Token (Pre-Storage Setter)\", Return.Data.Payload[\"JWT\"]);\n\n            return Store.setItem(STORE, Return.Data.Payload[\"JWT\"], (e, value) => {\n                if ( e ) console.error(\"[Fatal Error] Unknown Exception\", e);\n                (e)\n                    ? Handler.cancel(\"Unknown Error Establishing JWT Token\")\n                    : console.debug(\"[Debug]\", \"Established JWT Token in Storage\", value);\n            });\n        } catch ( error ) {\n            console.debug(\"[Warning] Unsuccessfully Established JWT Token\", error);\n\n            Return.Error = error;\n\n            Handler.cancel(\"Error Establishing JWT Token\");\n\n            return Store.clear((e) => {\n                if ( e ) {\n                    console.error(\"[Fatal Error] Unknown Exception\", e);\n                }\n                console.debug(\"[Debug]\", \"Removed Stale JWT Token(s) from Storage\");\n            });\n        }\n    }).finally(() => Return.Loading = false);\n\n    console.debug(\"[Debug]\", \"Initializing Authorization Awaitable ...\");\n\n    // @Task --> Try Catch\n    console.trace(Authorizer)\n\n    await $();\n\n    console.debug(\"[Debug]\", \"Awaitable Complete\", \"Session Storage Awaitable(s) ?:= Complete\");\n\n    return Return;\n};\n","import \"./SCSS/Field-Set.scss\";\n\nimport * as Styles from \"./SCSS/Index.module.scss\";\n\nimport React, { useEffect, useState } from \"react\";\n\nimport { Button, Form, FormGroup, InlineLoading, TextInput } from \"@carbon/react\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nimport { default as Types } from \"./../../components/Types\";\n\nimport * as API from \"./Authentication\";\n\nconst Component = ({ Authorizer }) => {\n    const navigate = useNavigate();\n\n    const [ awaiting, setAwaiting ] = useState(false);\n\n    const [ validUsername, setValidUsername ] = useState(true);\n    const [ validPassword, setValidPassword ] = useState(true);\n\n    useEffect(() => {\n        const addEventListeners = () => {\n            const Username = document.getElementById(\"username-field\");\n            const Submit = document.getElementById(\"submit-button\");\n\n            // --> Page Load\n            Username.autofocus = true;\n\n            Username.focus();\n            Username.click();\n\n            document.getElementById(\"login-form\")?.addEventListener(\"submit\", (event) => {\n                event.preventDefault();\n\n                console.trace(\"[Trace]\", \"Trusted Event\", event.isTrusted);\n                console.trace(\"[Trace]\", \"Phase #\", event.eventPhase);\n                console.trace(\"[Trace]\", \"Composed Event Path(s)\", event.composedPath());\n                console.trace(\"[Trace]\", \"Event Time-Stamp\", event.timeStamp);\n            });\n            \n            document.getElementById(\"username-field\")?.addEventListener(\"keydown\", (event) => {\n                if ( event.key === \"Enter\" ) {\n                    console.trace(\"[Trace]\", \"Username\", \"Return Key Event\");\n                    Submit.click();\n                }\n            });\n\n            document.getElementById(\"password-field\")?.addEventListener(\"keydown\", (event) => {\n                if ( event.key === \"Enter\" ) {\n                    console.trace(\"[Trace]\", \"Password\", \"Return Key Event\");\n                    Submit.click();\n                }\n            });\n\n            console.debug(\"[Debug]\", \"Event Listeners\", \"Successfully Loaded Page Listeners\");\n        };\n\n        addEventListeners();\n    }, []);\n\n    const handlePasswordFieldChanges = (event) => {\n        const Validation = {\n            Username: false,\n            Password: false,\n            Error: {\n                Username: document.getElementById(\"username-field-error-msg\") || false,\n                Password: document.getElementById(\"password-field-error-msg\") || false\n            }\n        };\n\n        const Username = document.getElementById(\"username-field\");\n        const Password = document.getElementById(\"password-field\");\n        const Submit = document.getElementById(\"submit-button\");\n\n        Validation.Username = (String(Username?.value).length >= 6) && true;\n        Validation.Password = (String(Password?.value).length >= 8) && true;\n\n        (Validation.Password) && Username.classList.toggle(\"cds--text-input--invalid\", false);\n        (Validation.Password) && Username.removeAttribute(\"data-invalid\");\n        (Validation.Password) && Username.removeAttribute(\"aria-invalid\");\n        (Validation.Password) && Username.removeAttribute(\"aria-describedby\");\n        (Validation.Password) && document.getElementById(\"password-field-error-msg\")?.remove();\n\n        (Validation.Username && Validation.Password) && Submit.removeAttribute(\"disabled\");\n        (Validation.Username && Validation.Password) && Submit.classList.toggle(\"cds--btn--disabled\", false);\n\n        const Message = document.getElementsByClassName(\"cds--form__requirements\").item(0);\n\n        Message && ((Validation.Username || Validation.Username === null) || (Validation.Password || Validation.Password === null)) && Message.remove();\n    }\n\n    const handleUsernameFieldChanges = (event) => {\n        const Validation = {\n            Username: false,\n            Password: false,\n            Error: {\n                Username: document.getElementById(\"username-field-error-msg\") || false,\n                Password: document.getElementById(\"password-field-error-msg\") || false\n            }\n        };\n\n        const Username = document.getElementById(\"username-field\");\n        const Password = document.getElementById(\"password-field\");\n        const Submit = document.getElementById(\"submit-button\");\n\n        Validation.Username = (String(Username?.value).length >= 6) && true;\n        Validation.Password = (String(Password?.value).length >= 8) && true;\n\n        (Validation.Username) && Username.classList.toggle(\"cds--text-input--invalid\", false);\n        (Validation.Username) && Username.removeAttribute(\"data-invalid\");\n        (Validation.Username) && Username.removeAttribute(\"aria-invalid\");\n        (Validation.Username) && Username.removeAttribute(\"aria-describedby\");\n        (Validation.Username) && document.getElementById(\"username-field-error-msg\")?.remove();\n\n        (Validation.Username && Validation.Password) && Submit.removeAttribute(\"disabled\");\n        (Validation.Username && Validation.Password) && Submit.classList.toggle(\"cds--btn--disabled\", false);\n\n        const Message = document.getElementsByClassName(\"cds--form__requirements\").item(0);\n\n        Message && ((Validation.Username || Validation.Username === null) || (Validation.Password || Validation.Password === null)) && Message.remove();\n    }\n\n    const Awaitable = () => {\n        return (\n            <Form\n                id={ \"login-form\" }\n                className={ Styles.form }\n                onSubmit={\n                    (event) => {\n                        setValidUsername(null);\n                        setValidPassword(null);\n\n                        /// Disable Ability to Modify Field(s) & Style Components\n                        const Username = document.getElementById(\"username-field\");\n                        const Password = document.getElementById(\"password-field\");\n                        const Submit = document.getElementById(\"submit-button\");\n\n                        Username.toggleAttribute(\"readonly\", true);\n                        Password.toggleAttribute(\"readonly\", true);\n                        Submit.toggleAttribute(\"disabled\", true);\n\n                        Username.contentEditable = \"false\";\n                        Password.contentEditable = \"false\";\n\n                        const Handler = async () => {\n                            setAwaiting(true);\n\n                            const Transmission = API.Cancellation();\n\n                            const Response = await API.Authenticate(\n                                {\n                                    Username: Username?.value,\n                                    Password: Password?.value\n                                }, Transmission\n                            );\n\n                            console.debug(\"[Debug] Validating Authentication Attempt ...\", Response);\n\n                            if ( Response.Status.Code === -1 ) {\n                                console.warn(\"@Task: Implement Race-Condition Notification\");\n                                console.warn(Response);\n\n                                return true;\n                            } else if ( Response.Status.Code === 200 ) {\n                                console.log(\"@Task: Implement Successful Notification\");\n\n                                return true;\n                            } else if ( Response.Status.Code >= 300 && Response.Status.Code < 500 ) {\n                                console.error(\"@Task: Implement Error Notification\");\n                                console.warn(Response);\n\n                                return false;\n                            } else if ( Response.Status.Code >= 500 ) {\n                                console.warn(\"@Task: Implement Internal Server Error Notification\");\n                                console.warn(Response);\n\n                                return false;\n                            } else {\n                                console.error(\"@Task: !!! Handle Unknown Error\");\n                                console.error(Response);\n\n                                return false;\n                            }\n                        };\n\n                        Handler().then((Response) => {\n                            console.debug(\"[Debug]\", \"Validation Outcome\", Response);\n\n                            try {\n                                if ( Response === true ) {\n                                    setAwaiting(false);\n                                    Authorizer[1](true);\n                                    navigate(-1);\n                                } else {\n                                    const e = JSON.stringify(Response, null, 4);\n                                    console.error(\"[Error]\", JSON.stringify({ Response, Error: e }, null, 4));\n                                    throw new Error(JSON.stringify({ Response, Error: e }, null, 4));\n                                }\n                            } catch ( e ) {\n                                console.warn(\"[Warning]\", \"Caught Exception\", e);\n                                throw new Error(e);\n                            }\n                        }).catch((error) => {\n                            console.warn(\"[Warning]\", error);\n\n                            Username.removeAttribute(\"readonly\");\n                            Password.removeAttribute(\"readonly\");\n\n                            Username.contentEditable = \"true\";\n                            Password.contentEditable = \"true\";\n\n                            Username.focus();\n                            Username.click();\n\n                            setValidUsername(false);\n                            setValidPassword(false);\n\n                            setAwaiting(false);\n\n                            console.log(\"[Log]\", \"Form Submission Attempt Complete\");\n                        });\n                    }\n                }\n            >\n                <FormGroup\n                    legendText={ \"\" }\n                    className={ Styles.fields }\n                >\n                    <TextInput\n                        id={ \"username-field\" }\n                        className={ [ Styles.field, Styles.normalized ].join(\" \") }\n                        invalid={ validUsername === false }\n                        inline={ false }\n                        type={ Types.Input.text }\n                        invalidText={ \"Username must contain 6 or more characters\" }\n                        labelText={ \"Account\" }\n                        autoComplete={ \"false\" }\n                        hideLabel={ false }\n                        onChange={ handleUsernameFieldChanges }\n                    />\n                    <TextInput\n                        id={ \"password-field\" }\n                        className={ Styles.field }\n                        inline={ false }\n                        invalid={validPassword === false}\n                        type={ Types.Input.password }\n                        invalidText={\n                            \"Password must contain a minimum of 8 characters, \"\n                            + \"at least one number, and include uppercase & lowercase\"\n                            + \" letters\"\n                        }\n                        labelText={ \"Password\" }\n                        autoComplete={ \"false\" }\n                        hideLabel={ false }\n                        onChange={ handlePasswordFieldChanges }\n                    />\n                </FormGroup>\n                <Button\n                    id={ \"submit-button\" }\n                    className={ Styles.button }\n                    kind={ Types.Button.Kind.tertiary }\n                    tabIndex={ 0 }\n                    disabled={ true }\n                    type={ Types.Input.submit }\n                    tooltipAlignment={ \"center\" }\n                    tooltipPosition={ \"right\" }\n                    name={ \"submit\" }\n                    onClick={ () => {\n                        setAwaiting(true);\n                        console.debug(\"[Debug]\", \"Submit Button Event\", \"Submitting ...\");\n                        const Form = document.getElementById(\"login-form\");\n\n                        Form?.submit();\n                    } }\n                    children={\n                        (awaiting === true) ? (\n                            <InlineLoading description=\"Loading...\"/>\n                        ) : (\n                            <>\n                                Submit\n                            </>\n                        )\n                    }\n                />\n            </Form>\n        );\n    };\n\n    return (<Awaitable/>);\n};\n\nexport default Component;\n","import { default as Form } from \"./Form\";\n\nconst Page = ({Authorizer}) => {\n    /// const Awaitable = Import(() => import(\"./Form\").then((Module) => Module));\n\n    return (\n        <Form Authorizer={Authorizer}/>\n    );\n};\n\nexport default Page;\n","import PropTypes from \"prop-types\";\n\nimport {\n    Grid, Column\n} from \"@carbon/react\";\n\nimport { default as Page } from \"./Page\";\n\nconst Component = (props) => {\n    const {\n        Authorizer,\n        ... Properties\n    } = props;\n\n    console.debug(\"[Debug] Unassigned Properties\", Properties);\n\n    return (\n        <Grid>\n            <Column lg={16} md={8} sm={4}>\n                <Page Authorizer={Authorizer}/>\n            </Column>\n        </Grid>\n    );\n};\n\nComponent.defaultProps = {};\n\nComponent.propTypes = {\n    Authorizer: PropTypes.array.isRequired\n};\n\nexport default Component;\n"],"sourceRoot":""}
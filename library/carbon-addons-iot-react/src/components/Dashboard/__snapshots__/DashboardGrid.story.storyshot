// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storybook Snapshot tests and console checks Storyshots 1 - Watson IoT/Dashboard Grid dashboard, all card sizes 1`] = `
<div
  className="storybook-container"
>
  Resize your window to see the callback handlers get triggered in the Actions tab.
  <div
    style={
      Object {
        "width": "calc(100vw - 6rem)",
      }
    }
  >
    <div
      data-testid="dashboard-grid"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <div
        className="react-grid-layout iot--dashboard-grid"
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": "2064px",
          }
        }
      >
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Small"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(0px,0px)",
              "OTransform": "translate(0px,0px)",
              "WebkitTransform": "translate(0px,0px)",
              "height": "144px",
              "msTransform": "translate(0px,0px)",
              "position": "absolute",
              "transform": "translate(0px,0px)",
              "width": "308px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Small"
            >
              <div
                className="iot--card--title--text"
              >
                Small
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Small Wide"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(324px,0px)",
              "OTransform": "translate(324px,0px)",
              "WebkitTransform": "translate(324px,0px)",
              "height": "144px",
              "msTransform": "translate(324px,0px)",
              "position": "absolute",
              "transform": "translate(324px,0px)",
              "width": "632px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Small Wide"
            >
              <div
                className="iot--card--title--text"
              >
                Small Wide
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Medium Thin"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "304px",
              "MozTransform": "translate(0px,160px)",
              "OTransform": "translate(0px,160px)",
              "WebkitTransform": "translate(0px,160px)",
              "height": "304px",
              "msTransform": "translate(0px,160px)",
              "position": "absolute",
              "transform": "translate(0px,160px)",
              "width": "308px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Medium Thin"
            >
              <div
                className="iot--card--title--text"
              >
                Medium Thin
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "256px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Medium"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "304px",
              "MozTransform": "translate(324px,160px)",
              "OTransform": "translate(324px,160px)",
              "WebkitTransform": "translate(324px,160px)",
              "height": "304px",
              "msTransform": "translate(324px,160px)",
              "position": "absolute",
              "transform": "translate(324px,160px)",
              "width": "632px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Medium"
            >
              <div
                className="iot--card--title--text"
              >
                Medium
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "256px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Medium Wide"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "304px",
              "MozTransform": "translate(0px,480px)",
              "OTransform": "translate(0px,480px)",
              "WebkitTransform": "translate(0px,480px)",
              "height": "304px",
              "msTransform": "translate(0px,480px)",
              "position": "absolute",
              "transform": "translate(0px,480px)",
              "width": "1280px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Medium Wide"
            >
              <div
                className="iot--card--title--text"
              >
                Medium Wide
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "256px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Large Thin"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(0px,800px)",
              "OTransform": "translate(0px,800px)",
              "WebkitTransform": "translate(0px,800px)",
              "height": "624px",
              "msTransform": "translate(0px,800px)",
              "position": "absolute",
              "transform": "translate(0px,800px)",
              "width": "308px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Large Thin"
            >
              <div
                className="iot--card--title--text"
              >
                Large Thin
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Large"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(324px,800px)",
              "OTransform": "translate(324px,800px)",
              "WebkitTransform": "translate(324px,800px)",
              "height": "624px",
              "msTransform": "translate(324px,800px)",
              "position": "absolute",
              "transform": "translate(324px,800px)",
              "width": "632px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Large"
            >
              <div
                className="iot--card--title--text"
              >
                Large
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          data-testid="Card"
          id="Large Wide"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(0px,1440px)",
              "OTransform": "translate(0px,1440px)",
              "WebkitTransform": "translate(0px,1440px)",
              "height": "624px",
              "msTransform": "translate(0px,1440px)",
              "position": "absolute",
              "transform": "translate(0px,1440px)",
              "width": "1280px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Large Wide"
            >
              <div
                className="iot--card--title--text"
              >
                Large Wide
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots 1 - Watson IoT/Dashboard Grid dashboard, all cards as resizable 1`] = `
<div
  className="storybook-container"
>
  <p>
    All cards are resizable by dragging and the card size prop is automatically updated to match the new size during the drag process. Some cards have a minimal size defined.
  </p>
  <div
    style={
      Object {
        "width": "calc(100vw - 6rem)",
      }
    }
  >
    <div
      data-testid="dashboard-grid"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <div
        className="react-grid-layout iot--dashboard-grid"
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": "3664px",
          }
        }
      >
        <div
          className="iot--card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="Card"
          id="card"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(0px,0px)",
              "OTransform": "translate(0px,0px)",
              "WebkitTransform": "translate(0px,0px)",
              "height": "144px",
              "msTransform": "translate(0px,0px)",
              "position": "absolute",
              "transform": "translate(0px,0px)",
              "width": "308px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Card - SMALL"
            >
              <div
                className="iot--card--title--text"
              >
                Card - SMALL
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <p>
              This is a basic card
            </p>
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="Card"
          id="valueCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(324px,0px)",
              "OTransform": "translate(324px,0px)",
              "WebkitTransform": "translate(324px,0px)",
              "height": "144px",
              "msTransform": "translate(324px,0px)",
              "position": "absolute",
              "transform": "translate(324px,0px)",
              "width": "632px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="ValueCard - SMALLWIDE"
            >
              <div
                className="iot--card--title--text"
              >
                ValueCard - SMALLWIDE
              </div>
            </span>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <div
              className="iot--value-card__content-wrapper"
            >
              <div
                className="iot--value-card__attribute-wrapper iot--value-card__attribute-wrapper--horizontal"
                style={
                  Object {
                    "--value-card-attribute-width": "100%",
                  }
                }
              >
                <div
                  className="iot--value-card__attribute-label"
                >
                  <span
                    data-testid="Card-attribute-0-threshold-label"
                  />
                </div>
                <div
                  className="iot--value-card__attribute"
                >
                  <div
                    className="iot--value-card__value-renderer--wrapper"
                  >
                    <span
                      className="iot--value-card__value-renderer--value"
                      data-testid="Card-attribute-0-value"
                      style={
                        Object {
                          "--value-renderer-color": null,
                          "--value-renderer-font-size": "42px",
                          "--value-renderer-max-lines": 1,
                        }
                      }
                      title="88"
                    >
                      88
                    </span>
                  </div>
                  <span
                    className="iot--value-card__attribute-unit"
                    data-testid="Card-attribute-0-unit"
                    style={
                      Object {
                        "--default-font-size": "1.25rem",
                      }
                    }
                  >
                    %
                  </span>
                </div>
                <div
                  className="iot--value-card__attribute-secondary-value"
                  data-testid="Card-attribute-0-secondary-value"
                  style={
                    Object {
                      "--secondary-value-color": "#6f6f6f",
                    }
                  }
                >
                  <svg
                    aria-label="trending down"
                    className="iot--value-card__attribute_trend-icon"
                    data-testid="Card-attribute-0-trending-down"
                    fill="red"
                    focusable="false"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    role="img"
                    viewBox="0 0 32 32"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M24 12L16 22 8 12z"
                    />
                  </svg>
                </div>
              </div>
            </div>
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card iot--gauge-card iot--card--wrapper"
          data-testid="Card"
          id="gaugeCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "304px",
              "MozTransform": "translate(0px,160px)",
              "OTransform": "translate(0px,160px)",
              "WebkitTransform": "translate(0px,160px)",
              "height": "304px",
              "msTransform": "translate(0px,160px)",
              "position": "absolute",
              "transform": "translate(0px,160px)",
              "width": "308px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="GaugeCard - MEDIUMTHIN"
            >
              <div
                className="iot--card--title--text"
              >
                GaugeCard - MEDIUMTHIN
              </div>
              <div
                className="bx--tooltip__label iot--card--header--tooltip"
                id="card-tooltip-trigger-gaugeCard"
              >
                
                <div
                  className="bx--tooltip__trigger"
                  onBlur={[Function]}
                  onClick={[Function]}
                  onContextMenu={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                  role="button"
                  tabIndex={0}
                >
                  <svg
                    aria-hidden={true}
                    description={null}
                    fill="currentColor"
                    focusable="false"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    role={null}
                    viewBox="0 0 16 16"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M8.5 11L8.5 6.5 6.5 6.5 6.5 7.5 7.5 7.5 7.5 11 6 11 6 12 10 12 10 11zM8 3.5c-.4 0-.8.3-.8.8S7.6 5 8 5c.4 0 .8-.3.8-.8S8.4 3.5 8 3.5z"
                    />
                    <path
                      d="M8,15c-3.9,0-7-3.1-7-7s3.1-7,7-7s7,3.1,7,7S11.9,15,8,15z M8,2C4.7,2,2,4.7,2,8s2.7,6,6,6s6-2.7,6-6S11.3,2,8,2z"
                    />
                  </svg>
                </div>
              </div>
            </span>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "256px",
              }
            }
          >
            <div
              className="iot--gauge-container react-grid-item cssTransforms react-resizable"
              style={
                Object {
                  "paddingBottom": 16,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 0,
                  "rowGap": "1rem",
                }
              }
            >
              <svg
                aria-labelledby="gauge-label"
                className="iot--gauge react-grid-item cssTransforms react-resizable"
                percent="0"
                style={
                  Object {
                    "--gauge-bg": "#e0e0e0",
                    "--gauge-colors": "green",
                    "--gauge-max-value": 100,
                    "--gauge-size": "68px",
                    "--gauge-trend-color": "",
                    "--gauge-value": 81,
                    "--stroke-dash": 152.68140296446393,
                    "--stroke-dash-array": 188.49555921538757,
                  }
                }
              >
                <circle
                  className="iot--gauge-bg"
                  cx={34}
                  cy={34}
                  r={30}
                />
                <circle
                  className="iot--gauge-fg"
                  cx={34}
                  cy={34}
                  r={30}
                />
                <text
                  className="iot--gauge-value iot--gauge-value__centered iot--gauge-value-lg"
                  id="gauge-label"
                  textAnchor="middle"
                  x={34}
                  y={42}
                >
                  <tspan>
                    81
                  </tspan>
                  <tspan>
                    %
                  </tspan>
                </text>
              </svg>
              <div
                className="iot--gauge-trend iot--gauge-trend__up"
              >
                <p
                  style={
                    Object {
                      "--gauge-trend-color": "",
                    }
                  }
                >
                  12%
                </p>
              </div>
            </div>
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="Card"
          id="pieChartCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "304px",
              "MozTransform": "translate(324px,160px)",
              "OTransform": "translate(324px,160px)",
              "WebkitTransform": "translate(324px,160px)",
              "height": "304px",
              "msTransform": "translate(324px,160px)",
              "position": "absolute",
              "transform": "translate(324px,160px)",
              "width": "632px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="PieChartCard - MEDIUM"
            >
              <div
                className="iot--card--title--text"
              >
                PieChartCard - MEDIUM
              </div>
            </span>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "256px",
              }
            }
          >
            <div
              className="iot--pie-chart-container"
            >
              <div
                id="mock-pie-chart"
              />
            </div>
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="map-card"
          id="mapCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(0px,1120px)",
              "OTransform": "translate(0px,1120px)",
              "WebkitTransform": "translate(0px,1120px)",
              "height": "624px",
              "msTransform": "translate(0px,1120px)",
              "position": "absolute",
              "transform": "translate(0px,1120px)",
              "width": "1280px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="map-card-header"
          >
            <span
              className="iot--card--title"
              data-testid="map-card-title"
              title="MapCard - LARGEWIDE"
            >
              <div
                className="iot--card--title--text"
              >
                MapCard - LARGEWIDE
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="map-card-toolbar"
            >
              <button
                aria-describedby={null}
                aria-pressed={null}
                className="iot--card--toolbar-action iot--card--toolbar-svg-wrapper bx--btn--icon-only iot--btn bx--btn bx--btn--sm bx--btn--ghost"
                data-testid="map-card-toolbar-expand-button"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                tabIndex={0}
                title="Expand"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  aria-label="Expand"
                  className="bx--btn__icon"
                  fill="currentColor"
                  focusable="false"
                  height={16}
                  preserveAspectRatio="xMidYMid meet"
                  role="img"
                  viewBox="0 0 16 16"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M6 15L6 14 2.7 14 7 9.7 6.3 9 2 13.3 2 10 1 10 1 15zM10 1L10 2 13.3 2 9 6.3 9.7 7 14 2.7 14 6 15 6 15 1z"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            className="iot--map-card-content iot--card--content"
            data-testid="map-card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <div
              className="iot--map__container"
            >
              <span
                className="react-resizable-handle react-resizable-handle-se"
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "touchAction": "none",
                  }
                }
              />
              <div
                className="iot--map-controls"
              >
                <div
                  className="iot--map-controls__container iot--map-controls__container--has-layers"
                  data-testid="map-card-map-controls"
                >
                  <div
                    className="iot--map-controls-layers"
                  >
                    <button
                      aria-describedby={null}
                      className="iot--map-controls-layers-trigger iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                      data-testid="Button"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <div
                        className="bx--assistive-text"
                        onMouseEnter={[Function]}
                      >
                        Layered controls
                      </div>
                      <svg
                        aria-hidden={true}
                        className="iot--map-controls-layers-trigger__caret"
                        fill="currentColor"
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        viewBox="0 0 32 32"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M24 24L16 32 8 24z"
                        />
                      </svg>
                      <svg
                        aria-hidden="true"
                        aria-label="Layered controls"
                        className="bx--btn__icon"
                        fill="currentColor"
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        viewBox="0 0 32 32"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M16,24a.9967.9967,0,0,1-.4741-.12l-13-7L3.4741,15.12,16,21.8643,28.5259,15.12l.9482,1.7607-13,7A.9967.9967,0,0,1,16,24Z"
                        />
                        <path
                          d="M16 30a.9967.9967 0 01-.4741-.12l-13-7L3.4741 21.12 16 27.8643 28.5259 21.12l.9482 1.7607-13 7A.9967.9967 0 0116 30zM16 18a.9967.9967 0 01-.4741-.12l-13-7a1 1 0 010-1.7607l13-7a.9982.9982 0 01.9482 0l13 7a1 1 0 010 1.7607l-13 7A.9967.9967 0 0116 18zM5.1094 10L16 15.8643 26.8906 10 16 4.1358z"
                        />
                      </svg>
                    </button>
                    <div
                      className="iot--map-controls-layers-wrapper"
                    >
                      <button
                        aria-describedby={null}
                        className="iot--map-controls-layers-btn iot--btn iot--btn-icon-selection bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                        data-testid="Button"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        tabIndex={-1}
                        type="button"
                      >
                        <div
                          className="bx--assistive-text"
                          onMouseEnter={[Function]}
                        >
                          Toggle Layer control 1
                        </div>
                        <svg
                          aria-hidden="true"
                          aria-label="Toggle Layer control 1"
                          className="bx--btn__icon"
                          fill="currentColor"
                          focusable="false"
                          height={32}
                          preserveAspectRatio="xMidYMid meet"
                          role="img"
                          viewBox="0 0 32 32"
                          width={32}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                          />
                        </svg>
                      </button>
                      <button
                        aria-describedby={null}
                        className="iot--map-controls-layers-btn iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                        data-testid="Button"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        tabIndex={-1}
                        type="button"
                      >
                        <div
                          className="bx--assistive-text"
                          onMouseEnter={[Function]}
                        >
                          Layer control 2
                        </div>
                        <svg
                          aria-hidden="true"
                          aria-label="Layer control 2"
                          className="bx--btn__icon"
                          fill="currentColor"
                          focusable="false"
                          height={32}
                          preserveAspectRatio="xMidYMid meet"
                          role="img"
                          viewBox="0 0 32 32"
                          width={32}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                          />
                        </svg>
                      </button>
                      <button
                        aria-describedby={null}
                        className="iot--map-controls-layers-btn iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                        data-testid="Button"
                        disabled={false}
                        onBlur={[Function]}
                        onClick={[Function]}
                        onFocus={[Function]}
                        onMouseEnter={[Function]}
                        onMouseLeave={[Function]}
                        tabIndex={-1}
                        type="button"
                      >
                        <div
                          className="bx--assistive-text"
                          onMouseEnter={[Function]}
                        >
                          Layer control 3
                        </div>
                        <svg
                          aria-hidden="true"
                          aria-label="Layer control 3"
                          className="bx--btn__icon"
                          fill="currentColor"
                          focusable="false"
                          height={32}
                          preserveAspectRatio="xMidYMid meet"
                          role="img"
                          viewBox="0 0 32 32"
                          width={32}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                          />
                        </svg>
                      </button>
                    </div>
                  </div>
                  <div
                    className="iot--map-controls-btn-group"
                  >
                    <button
                      aria-describedby={null}
                      className="iot--map-controls-btn iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                      data-testid="Button"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <div
                        className="bx--assistive-text"
                        onMouseEnter={[Function]}
                      >
                        GDP
                      </div>
                      <svg
                        aria-hidden="true"
                        aria-label="GDP"
                        className="bx--btn__icon"
                        fill="currentColor"
                        focusable="false"
                        height={32}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        viewBox="0 0 32 32"
                        width={32}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                        />
                      </svg>
                    </button>
                    <button
                      aria-describedby={null}
                      className="iot--map-controls-btn iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                      data-testid="Button"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <div
                        className="bx--assistive-text"
                        onMouseEnter={[Function]}
                      >
                        Population
                      </div>
                      <svg
                        aria-hidden="true"
                        aria-label="Population"
                        className="bx--btn__icon"
                        fill="currentColor"
                        focusable="false"
                        height={32}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        viewBox="0 0 32 32"
                        width={32}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                        />
                      </svg>
                    </button>
                    <button
                      aria-describedby={null}
                      className="iot--map-controls-btn iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                      data-testid="Button"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <div
                        className="bx--assistive-text"
                        onMouseEnter={[Function]}
                      >
                        Map control 3A
                      </div>
                      <svg
                        aria-hidden="true"
                        aria-label="Map control 3A"
                        className="bx--btn__icon"
                        fill="currentColor"
                        focusable="false"
                        height={32}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        viewBox="0 0 32 32"
                        width={32}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                        />
                      </svg>
                    </button>
                  </div>
                  <button
                    aria-describedby={null}
                    className="iot--map-controls-btn iot--btn iot--btn-icon-selection bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                    data-testid="Button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <div
                      className="bx--assistive-text"
                      onMouseEnter={[Function]}
                    >
                      Toggle control 1
                    </div>
                    <svg
                      aria-hidden="true"
                      aria-label="Toggle control 1"
                      className="bx--btn__icon"
                      fill="currentColor"
                      focusable="false"
                      height={32}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 32 32"
                      width={32}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                      />
                    </svg>
                  </button>
                  <button
                    aria-describedby={null}
                    className="iot--map-controls-btn iot--btn iot--btn-icon-selection bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                    data-testid="Button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <div
                      className="bx--assistive-text"
                      onMouseEnter={[Function]}
                    >
                      Toggle control 2
                    </div>
                    <svg
                      aria-hidden="true"
                      aria-label="Toggle control 2"
                      className="bx--btn__icon"
                      fill="currentColor"
                      focusable="false"
                      height={32}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 32 32"
                      width={32}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                      />
                    </svg>
                  </button>
                  <button
                    aria-describedby={null}
                    className="iot--map-controls-btn iot--btn iot--btn-icon-selection bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                    data-testid="Button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <div
                      className="bx--assistive-text"
                      onMouseEnter={[Function]}
                    >
                      Toggle control 3
                    </div>
                    <svg
                      aria-hidden="true"
                      aria-label="Toggle control 3"
                      className="bx--btn__icon"
                      fill="currentColor"
                      focusable="false"
                      height={32}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 32 32"
                      width={32}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M26 14H24v2h2a3.0033 3.0033 0 013 3v4h2V19A5.0058 5.0058 0 0026 14zM24 4a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0024 2zM23 30H21V28a3.0033 3.0033 0 00-3-3H14a3.0033 3.0033 0 00-3 3v2H9V28a5.0059 5.0059 0 015-5h4a5.0059 5.0059 0 015 5zM16 13a3 3 0 11-3 3 3 3 0 013-3m0-2a5 5 0 105 5A5 5 0 0016 11zM8 14H6a5.0059 5.0059 0 00-5 5v4H3V19a3.0033 3.0033 0 013-3H8zM8 4A3 3 0 115 7 3 3 0 018 4M8 2a5 5 0 105 5A5 5 0 008 2z"
                      />
                    </svg>
                  </button>
                </div>
                <div
                  className="iot--map-zoom"
                  data-testid="map-card-zoom-control"
                >
                  <button
                    aria-describedby={null}
                    className="iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                    data-testid="map-card-zoom-control-zoom-in"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <div
                      className="bx--assistive-text"
                      onMouseEnter={[Function]}
                    >
                      Zoom In
                    </div>
                    <svg
                      aria-hidden="true"
                      aria-label="Zoom In"
                      className="bx--btn__icon"
                      fill="currentColor"
                      focusable="false"
                      height={32}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 32 32"
                      width={32}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M18 12L14 12 14 8 12 8 12 12 8 12 8 14 12 14 12 18 14 18 14 14 18 14 18 12z"
                      />
                      <path
                        d="M21.4479,20A10.856,10.856,0,0,0,24,13,11,11,0,1,0,13,24a10.856,10.856,0,0,0,7-2.5521L27.5859,29,29,27.5859ZM13,22a9,9,0,1,1,9-9A9.01,9.01,0,0,1,13,22Z"
                      />
                    </svg>
                  </button>
                  <button
                    aria-describedby={null}
                    className="iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--left bx--tooltip--align-center"
                    data-testid="map-card-zoom-control-zoom-out"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    tabIndex={0}
                    type="button"
                  >
                    <div
                      className="bx--assistive-text"
                      onMouseEnter={[Function]}
                    >
                      Zoom out
                    </div>
                    <svg
                      aria-hidden="true"
                      aria-label="Zoom out"
                      className="bx--btn__icon"
                      fill="currentColor"
                      focusable="false"
                      height={32}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 32 32"
                      width={32}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M8 12H18V14H8z"
                      />
                      <path
                        d="M21.4479,20A10.856,10.856,0,0,0,24,13,11,11,0,1,0,13,24a10.856,10.856,0,0,0,7-2.5521L27.5859,29,29,27.5859ZM13,22a9,9,0,1,1,9-9A9.01,9.01,0,0,1,13,22Z"
                      />
                    </svg>
                  </button>
                </div>
              </div>
              <div
                className="iot--map-legend"
                data-testid="map-card-legend"
              >
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#f8d5cc",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    0
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#f4bfb6",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    1,000,000
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#f1a8a5",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    5,000,000
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#ee8f9a",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    10,000,000
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#ec739b",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    50,000,000
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#dd5ca8",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    100,000,000
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#c44cc0",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    250,000,000
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#9f43d7",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    500,000,000
                  </span>
                </div>
                <div
                  className="iot--map-legend-keys"
                >
                  <span
                    className="iot--map-legend-keys-color"
                    style={
                      Object {
                        "backgroundColor": "#6e40e6",
                      }
                    }
                  />
                  <span
                    className="iot--map-legend-keys-value"
                  >
                    1,000,000,000
                  </span>
                </div>
              </div>
            </div>
            <div
              className="iot--map-settings"
              data-testid="map-card-settings"
            >
              <div
                className="iot--map-settings-header"
              >
                <h3
                  className="iot--map-settings-header__title"
                >
                  Map configuration
                </h3>
                <button
                  aria-describedby={null}
                  className="iot--map-settings-close-btn iot--btn bx--btn bx--btn--sm bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--top bx--tooltip--align-center"
                  data-testid="Button"
                  disabled={false}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onMouseEnter={[Function]}
                  onMouseLeave={[Function]}
                  tabIndex={0}
                  type="button"
                >
                  <div
                    className="bx--assistive-text"
                    onMouseEnter={[Function]}
                  >
                    Close
                  </div>
                  <svg
                    aria-hidden="true"
                    aria-label="Close"
                    className="bx--btn__icon"
                    fill="currentColor"
                    focusable="false"
                    height={16}
                    preserveAspectRatio="xMidYMid meet"
                    role="img"
                    viewBox="0 0 32 32"
                    width={16}
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <path
                      d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                    />
                  </svg>
                </button>
              </div>
              <ul
                className="bx--accordion settings-accordion bx--accordion--end"
                style={
                  Object {
                    "paddingTop": 0,
                  }
                }
              >
                <li
                  className="bx--accordion__item bx--accordion__item--active"
                  onAnimationEnd={[Function]}
                  onClick={[Function]}
                >
                  <button
                    aria-controls="accordion-item-169"
                    aria-expanded={true}
                    className="bx--accordion__heading"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden={true}
                      className="bx--accordion__arrow"
                      fill="currentColor"
                      focusable="false"
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z"
                      />
                    </svg>
                    <div
                      className="bx--accordion__title"
                      dir="auto"
                    >
                      GDP vs Population
                    </div>
                  </button>
                  <div
                    className="bx--accordion__content"
                    id="accordion-item-169"
                  >
                    <div
                      className="toggle-group"
                    >
                      <label
                        className="toggle-container"
                        htmlFor="Population"
                      >
                        <input
                          checked={true}
                          id="Population"
                          name="toggle"
                          onChange={[Function]}
                          type="radio"
                        />
                        <div
                          className="toggle"
                        >
                          Population
                        </div>
                      </label>
                      <label
                        className="toggle-container"
                        htmlFor="GDP"
                      >
                        <input
                          checked={false}
                          id="GDP"
                          name="toggle"
                          onChange={[Function]}
                          type="radio"
                        />
                        <div
                          className="toggle"
                        >
                          GDP
                        </div>
                      </label>
                    </div>
                  </div>
                </li>
                <li
                  className="bx--accordion__item"
                  onAnimationEnd={[Function]}
                  onClick={[Function]}
                >
                  <button
                    aria-controls="accordion-item-170"
                    aria-expanded={false}
                    className="bx--accordion__heading"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden={true}
                      className="bx--accordion__arrow"
                      fill="currentColor"
                      focusable="false"
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z"
                      />
                    </svg>
                    <div
                      className="bx--accordion__title"
                      dir="auto"
                    >
                      Panel B
                    </div>
                  </button>
                  <div
                    className="bx--accordion__content"
                    id="accordion-item-170"
                  >
                    More Map settings
                  </div>
                </li>
                <li
                  className="bx--accordion__item"
                  onAnimationEnd={[Function]}
                  onClick={[Function]}
                >
                  <button
                    aria-controls="accordion-item-171"
                    aria-expanded={false}
                    className="bx--accordion__heading"
                    onClick={[Function]}
                    onKeyDown={[Function]}
                    type="button"
                  >
                    <svg
                      aria-hidden={true}
                      className="bx--accordion__arrow"
                      fill="currentColor"
                      focusable="false"
                      height={16}
                      preserveAspectRatio="xMidYMid meet"
                      viewBox="0 0 16 16"
                      width={16}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M11 8L6 13 5.3 12.3 9.6 8 5.3 3.7 6 3z"
                      />
                    </svg>
                    <div
                      className="bx--accordion__title"
                      dir="auto"
                    >
                      Panel C
                    </div>
                  </button>
                  <div
                    className="bx--accordion__content"
                    id="accordion-item-171"
                  >
                    Even more settings
                  </div>
                </li>
              </ul>
            </div>
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card iot--table-card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="Card"
          id="tableCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(324px,1760px)",
              "OTransform": "translate(324px,1760px)",
              "WebkitTransform": "translate(324px,1760px)",
              "height": "624px",
              "msTransform": "translate(324px,1760px)",
              "position": "absolute",
              "transform": "translate(324px,1760px)",
              "width": "632px",
            }
          }
        >
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <div
              className="TableCard__StyledStatefulTable-q9l5bz-0 ghyGJn iot--table-container bx--data-table-container"
              data-testid="table-for-card-tableCard-table-container"
            >
              <section
                aria-label="data table toolbar"
                className="bx--table-toolbar"
                data-testid="table-for-card-tableCard-table-toolbar"
              >
                <div
                  aria-hidden={true}
                  className="bx--batch-actions iot--table-batch-actions"
                  data-testid="table-for-card-tableCard-table-toolbar-batch-actions"
                >
                  <div
                    className="bx--batch-summary"
                  >
                    <p
                      className="bx--batch-summary__para"
                    >
                      <span>
                        0 items selected
                      </span>
                    </p>
                  </div>
                  <div
                    className="bx--action-list"
                  >
                    <button
                      aria-describedby={null}
                      aria-pressed={null}
                      className="bx--batch-summary__cancel bx--btn bx--btn--primary"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={-1}
                      type="button"
                    >
                      Cancel
                    </button>
                  </div>
                </div>
                <label
                  className="iot--table-toolbar-secondary-title"
                >
                  TableCard - LARGE
                </label>
                <div
                  className="bx--toolbar-content iot--table-toolbar-content"
                  data-testid="table-for-card-tableCard-table-toolbar-content"
                >
                  <div
                    aria-labelledby="table-for-card-tableCard-toolbar-search-search"
                    className="bx--search bx--search--xl table-toolbar-search bx--toolbar-search-container-expandable"
                    role="search"
                  >
                    <div
                      className="bx--search-magnifier"
                    >
                      <svg
                        aria-hidden={true}
                        className="bx--search-magnifier-icon"
                        fill="currentColor"
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        viewBox="0 0 16 16"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M15,14.3L10.7,10c1.9-2.3,1.6-5.8-0.7-7.7S4.2,0.7,2.3,3S0.7,8.8,3,10.7c2,1.7,5,1.7,7,0l4.3,4.3L15,14.3z M2,6.5	C2,4,4,2,6.5,2S11,4,11,6.5S9,11,6.5,11S2,9,2,6.5z"
                        />
                      </svg>
                    </div>
                    <label
                      className="bx--label"
                      htmlFor="table-for-card-tableCard-toolbar-search"
                      id="table-for-card-tableCard-toolbar-search-search"
                    >
                      Search
                    </label>
                    <input
                      autoComplete="off"
                      className="bx--search-input"
                      data-testid="table-for-card-tableCard-table-toolbar-search"
                      id="table-for-card-tableCard-toolbar-search"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      placeholder="Search"
                      role="searchbox"
                      tabIndex="0"
                      type="text"
                      value=""
                    />
                    <button
                      aria-label="Clear search input"
                      className="bx--search-close bx--search-close--hidden"
                      onClick={[Function]}
                      type="button"
                    >
                      <svg
                        aria-hidden={true}
                        fill="currentColor"
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        viewBox="0 0 32 32"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M24 9.4L22.6 8 16 14.6 9.4 8 8 9.4 14.6 16 8 22.6 9.4 24 16 17.4 22.6 24 24 22.6 17.4 16 24 9.4z"
                        />
                      </svg>
                    </button>
                  </div>
                  <button
                    aria-describedby={null}
                    aria-pressed={null}
                    className="bx--btn--icon-only iot--tooltip-svg-wrapper iot--btn bx--btn bx--btn--ghost"
                    data-testid="download-button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    tabIndex={0}
                    title="Download table content"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      aria-label="Download table content"
                      className="bx--btn__icon"
                      fill="currentColor"
                      focusable="false"
                      height={20}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 32 32"
                      width={20}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M26 24v4H6V24H4v4H4a2 2 0 002 2H26a2 2 0 002-2h0V24zM26 14L24.59 12.59 17 20.17 17 2 15 2 15 20.17 7.41 12.59 6 14 16 24 26 14z"
                      />
                    </svg>
                  </button>
                  <button
                    aria-describedby={null}
                    aria-pressed={null}
                    className="bx--btn--icon-only iot--tooltip-svg-wrapper iot--btn bx--btn bx--btn--ghost"
                    data-testid="filter-button"
                    disabled={false}
                    onBlur={[Function]}
                    onClick={[Function]}
                    onFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    tabIndex={0}
                    title="Filters"
                    type="button"
                  >
                    <svg
                      aria-hidden="true"
                      aria-label="Filters"
                      className="bx--btn__icon"
                      fill="currentColor"
                      focusable="false"
                      height={20}
                      preserveAspectRatio="xMidYMid meet"
                      role="img"
                      viewBox="0 0 32 32"
                      width={20}
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <path
                        d="M18,28H14a2,2,0,0,1-2-2V18.41L4.59,11A2,2,0,0,1,4,9.59V6A2,2,0,0,1,6,4H26a2,2,0,0,1,2,2V9.59A2,2,0,0,1,27.41,11L20,18.41V26A2,2,0,0,1,18,28ZM6,6V9.59l8,8V26h4V17.59l8-8V6Z"
                      />
                    </svg>
                  </button>
                  <div
                    className="iot--card--toolbar"
                    data-testid="card-toolbar"
                  >
                    <div
                      className="iot--card--toolbar-date-range-wrapper"
                    >
                      <div
                        className="iot--card--toolbar-timerange-label"
                        id="timeRange"
                      >
                        Default
                      </div>
                      <button
                        aria-expanded={false}
                        aria-haspopup={true}
                        aria-label="open and close list of options"
                        className="iot--card--toolbar-date-range-action bx--overflow-menu"
                        data-testid="card-toolbar-range-picker"
                        onClick={[Function]}
                        onClose={[Function]}
                        onKeyDown={[Function]}
                        open={false}
                        title="Select time range"
                        type="button"
                      >
                        <svg
                          aria-label="Select time range"
                          className="bx--overflow-menu__icon"
                          fill="currentColor"
                          focusable="false"
                          height={16}
                          onClick={[Function]}
                          onKeyDown={[Function]}
                          preserveAspectRatio="xMidYMid meet"
                          role="img"
                          viewBox="0 0 32 32"
                          width={16}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M21,30a8,8,0,1,1,8-8A8,8,0,0,1,21,30Zm0-14a6,6,0,1,0,6,6A6,6,0,0,0,21,16Z"
                          />
                          <path
                            d="M22.59 25L20 22.41 20 18 22 18 22 21.59 24 23.59 22.59 25z"
                          />
                          <path
                            d="M28,6a2,2,0,0,0-2-2H22V2H20V4H12V2H10V4H6A2,2,0,0,0,4,6V26a2,2,0,0,0,2,2h4V26H6V6h4V8h2V6h8V8h2V6h4v6h2Z"
                          />
                          <title>
                            Select time range
                          </title>
                        </svg>
                      </button>
                    </div>
                    <button
                      aria-describedby={null}
                      aria-pressed={null}
                      className="iot--card--toolbar-action iot--card--toolbar-svg-wrapper bx--btn--icon-only iot--btn bx--btn bx--btn--sm bx--btn--ghost"
                      data-testid="card-toolbar-expand-button"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={0}
                      title="Expand to fullscreen"
                      type="button"
                    >
                      <svg
                        aria-hidden="true"
                        aria-label="Expand to fullscreen"
                        className="bx--btn__icon"
                        fill="currentColor"
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        viewBox="0 0 32 32"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M28,4H10A2.0059,2.0059,0,0,0,8,6V20a2.0059,2.0059,0,0,0,2,2H28a2.0059,2.0059,0,0,0,2-2V6A2.0059,2.0059,0,0,0,28,4Zm0,16H10V6H28Z"
                        />
                        <path
                          d="M18,26H4V16H6V14H4a2.0059,2.0059,0,0,0-2,2V26a2.0059,2.0059,0,0,0,2,2H18a2.0059,2.0059,0,0,0,2-2V24H18Z"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </section>
              <div
                className="addons-iot-table-container iot-table-container--dropdown-height-fix"
              >
                <div
                  className="bx--data-table-content"
                >
                  <table
                    className="bx--data-table bx--data-table--no-border"
                    data-testid="table-for-card-tableCard"
                    id="table-for-card-tableCard"
                    title={null}
                  >
                    <thead
                      data-testid="table-for-card-tableCard-table-head"
                      onMouseMove={null}
                      onMouseUp={null}
                    >
                      <tr>
                        <th
                          aria-sort="none"
                          className="table-header-label-start iot--table-head--table-header table-header-sortable"
                          data-testid="table-for-card-tableCard-table-head-column-alert"
                          scope="col"
                          style={
                            Object {
                              "width": undefined,
                            }
                          }
                          width=""
                        >
                          <button
                            align="start"
                            className="table-header-label-start iot--table-head--table-header table-header-sortable bx--table-sort"
                            data-column="alert"
                            data-floating-menu-container={true}
                            id="column-alert"
                            onClick={[Function]}
                            width=""
                          >
                            <span
                              className="bx--table-header-label"
                            >
                              <span
                                className=""
                                title="Alert"
                              >
                                Alert
                              </span>
                            </span>
                            <svg
                              aria-label="Sort rows by this header in ascending order"
                              className="bx--table-sort__icon"
                              fill="currentColor"
                              focusable="false"
                              height={20}
                              preserveAspectRatio="xMidYMid meet"
                              role="img"
                              viewBox="0 0 32 32"
                              width={20}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                              />
                            </svg>
                            <svg
                              aria-label="Sort rows by this header in ascending order"
                              className="bx--table-sort__icon-unsorted"
                              fill="currentColor"
                              focusable="false"
                              height={20}
                              preserveAspectRatio="xMidYMid meet"
                              role="img"
                              viewBox="0 0 32 32"
                              width={20}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                              />
                            </svg>
                          </button>
                        </th>
                        <th
                          aria-sort="none"
                          className="table-header-label-start iot--table-head--table-header table-header-sortable"
                          data-testid="table-for-card-tableCard-table-head-column-hour"
                          scope="col"
                          style={
                            Object {
                              "width": undefined,
                            }
                          }
                          width=""
                        >
                          <button
                            align="start"
                            className="table-header-label-start iot--table-head--table-header table-header-sortable bx--table-sort"
                            data-column="hour"
                            data-floating-menu-container={true}
                            id="column-hour"
                            onClick={[Function]}
                            width=""
                          >
                            <span
                              className="bx--table-header-label"
                            >
                              <span
                                className=""
                                title="Hour"
                              >
                                Hour
                              </span>
                            </span>
                            <svg
                              aria-label="Sort rows by this header in ascending order"
                              className="bx--table-sort__icon"
                              fill="currentColor"
                              focusable="false"
                              height={20}
                              preserveAspectRatio="xMidYMid meet"
                              role="img"
                              viewBox="0 0 32 32"
                              width={20}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                              />
                            </svg>
                            <svg
                              aria-label="Sort rows by this header in ascending order"
                              className="bx--table-sort__icon-unsorted"
                              fill="currentColor"
                              focusable="false"
                              height={20}
                              preserveAspectRatio="xMidYMid meet"
                              role="img"
                              viewBox="0 0 32 32"
                              width={20}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                              />
                            </svg>
                          </button>
                        </th>
                        <th
                          aria-sort="none"
                          className="table-header-label-start iot--table-head--table-header table-header-sortable"
                          data-testid="table-for-card-tableCard-table-head-column-pressure"
                          scope="col"
                          style={
                            Object {
                              "width": undefined,
                            }
                          }
                          width=""
                        >
                          <button
                            align="start"
                            className="table-header-label-start iot--table-head--table-header table-header-sortable bx--table-sort"
                            data-column="pressure"
                            data-floating-menu-container={true}
                            id="column-pressure"
                            onClick={[Function]}
                            width=""
                          >
                            <span
                              className="bx--table-header-label"
                            >
                              <span
                                className=""
                                title="Pressure"
                              >
                                Pressure
                              </span>
                            </span>
                            <svg
                              aria-label="Sort rows by this header in ascending order"
                              className="bx--table-sort__icon"
                              fill="currentColor"
                              focusable="false"
                              height={20}
                              preserveAspectRatio="xMidYMid meet"
                              role="img"
                              viewBox="0 0 32 32"
                              width={20}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M16 4L6 14 7.41 15.41 15 7.83 15 28 17 28 17 7.83 24.59 15.41 26 14 16 4z"
                              />
                            </svg>
                            <svg
                              aria-label="Sort rows by this header in ascending order"
                              className="bx--table-sort__icon-unsorted"
                              fill="currentColor"
                              focusable="false"
                              height={20}
                              preserveAspectRatio="xMidYMid meet"
                              role="img"
                              viewBox="0 0 32 32"
                              width={20}
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M27.6 20.6L24 24.2 24 4 22 4 22 24.2 18.4 20.6 17 22 23 28 29 22zM9 4L3 10 4.4 11.4 8 7.8 8 28 10 28 10 7.8 13.6 11.4 15 10z"
                              />
                            </svg>
                          </button>
                        </th>
                      </tr>
                    </thead>
                    <tbody
                      aria-live="polite"
                      data-testid="table-for-card-tableCard-table-body"
                    >
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-10-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI010 proccess need to optimize adjust Y variables"
                            >
                              AHI010 proccess need to optimize adjust Y variables
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-10-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 04:26"
                            >
                              07/23/2019 04:26
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-10-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="0"
                            >
                              0
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-11-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI010 proccess need to optimize adjust Y variables"
                            >
                              AHI010 proccess need to optimize adjust Y variables
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-11-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 05:26"
                            >
                              07/23/2019 05:26
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-11-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="1"
                            >
                              1
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-1-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI005 Asset failure"
                            >
                              AHI005 Asset failure
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-1-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 05:26"
                            >
                              07/23/2019 05:26
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-1-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="0"
                            >
                              0
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-2-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI003 process need to optimize adjust X variables"
                            >
                              AHI003 process need to optimize adjust X variables
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-2-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 04:26"
                            >
                              07/23/2019 04:26
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-2-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="2"
                            >
                              2
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-6-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI001 proccess need to optimize."
                            >
                              AHI001 proccess need to optimize.
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-6-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 04:30"
                            >
                              07/23/2019 04:30
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-6-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="68"
                            >
                              68
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-3-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI001 proccess need to optimize adjust Y variables"
                            >
                              AHI001 proccess need to optimize adjust Y variables
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-3-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="08/02/2019 09:42"
                            >
                              08/02/2019 09:42
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-3-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="10"
                            >
                              10
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-4-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI001 proccess need to optimize adjust Y variables"
                            >
                              AHI001 proccess need to optimize adjust Y variables
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-4-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 05:26"
                            >
                              07/23/2019 05:26
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-4-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="0"
                            >
                              0
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-8-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI001 proccess need to optimize adjust Y variables"
                            >
                              AHI001 proccess need to optimize adjust Y variables
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-8-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 03:30"
                            >
                              07/23/2019 03:30
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-8-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="0"
                            >
                              0
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-9-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI001 proccess need to optimize adjust Y variables"
                            >
                              AHI001 proccess need to optimize adjust Y variables
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-9-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 04:26"
                            >
                              07/23/2019 04:26
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-9-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="0"
                            >
                              0
                            </span>
                          </span>
                        </td>
                      </tr>
                      <tr
                        className="TableBodyRow__StyledTableRow-sc-103itxu-0 fNIOnc"
                        onClick={[Function]}
                      >
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="alert"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-5-alert"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="AHI001 proccess need to optimize"
                            >
                              AHI001 proccess need to optimize
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="hour"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-5-hour"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="07/23/2019 04:30"
                            >
                              07/23/2019 04:30
                            </span>
                          </span>
                        </td>
                        <td
                          align="start"
                          className="data-table-start iot--table__cell--sortable"
                          data-column="pressure"
                          data-offset={0}
                          id="cell-table-for-card-tableCard-row-5-pressure"
                          offset={0}
                          width=""
                        >
                          <span
                            className="TableBodyRow__StyledNestedSpan-sc-103itxu-5 YBqdC"
                          >
                            <span
                              className=""
                              title="10"
                            >
                              10
                            </span>
                          </span>
                        </td>
                      </tr>
                    </tbody>
                  </table>
                </div>
              </div>
              <div
                className="bx--pagination iot--pagination iot--pagination--hide-page bx--pagination--lg"
                data-testid="table-for-card-tableCard-table-pagination"
                style={
                  Object {
                    "--pagination-text-display": "flex",
                  }
                }
              >
                <div
                  className="bx--pagination__left"
                >
                  <label
                    className="bx--pagination__text"
                    htmlFor="bx-pagination-select-3"
                    id="bx-pagination-select-3-count-label"
                  >
                    Items per page:
                  </label>
                  <div
                    className="bx--form-item"
                  >
                    <div
                      className="bx--select bx--select--inline bx--select__item-count"
                    >
                      <div
                        className="bx--select-input--inline__wrapper"
                      >
                        <div
                          className="bx--select-input__wrapper"
                          data-invalid={null}
                        >
                          <select
                            className="bx--select-input"
                            id="bx-pagination-select-3"
                            onChange={[Function]}
                            value={10}
                          >
                            <option
                              className="bx--select-option"
                              disabled={false}
                              hidden={false}
                              value={10}
                            >
                              10
                            </option>
                            <option
                              className="bx--select-option"
                              disabled={false}
                              hidden={false}
                              value={25}
                            >
                              25
                            </option>
                            <option
                              className="bx--select-option"
                              disabled={false}
                              hidden={false}
                              value={100}
                            >
                              100
                            </option>
                          </select>
                          <svg
                            aria-hidden={true}
                            className="bx--select__arrow"
                            fill="currentColor"
                            focusable="false"
                            height={16}
                            preserveAspectRatio="xMidYMid meet"
                            viewBox="0 0 16 16"
                            width={16}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                            />
                          </svg>
                        </div>
                      </div>
                    </div>
                  </div>
                  <span
                    className="bx--pagination__text bx--pagination__items-count"
                  >
                    1–10 of 11 items
                  </span>
                </div>
                <div
                  className="bx--pagination__right"
                >
                  <div
                    className="bx--form-item"
                  >
                    <div
                      className="bx--select bx--select--inline bx--select__page-number"
                    >
                      <label
                        className="bx--label bx--visually-hidden"
                        htmlFor="bx-pagination-select-3-right"
                      >
                        Page number, of 2 pages
                      </label>
                      <div
                        className="bx--select-input--inline__wrapper"
                      >
                        <div
                          className="bx--select-input__wrapper"
                          data-invalid={null}
                        >
                          <select
                            className="bx--select-input"
                            id="bx-pagination-select-3-right"
                            onChange={[Function]}
                            value={1}
                          >
                            <option
                              className="bx--select-option"
                              disabled={false}
                              hidden={false}
                              value={1}
                            >
                              1
                            </option>
                            <option
                              className="bx--select-option"
                              disabled={false}
                              hidden={false}
                              value={2}
                            >
                              2
                            </option>
                          </select>
                          <svg
                            aria-hidden={true}
                            className="bx--select__arrow"
                            fill="currentColor"
                            focusable="false"
                            height={16}
                            preserveAspectRatio="xMidYMid meet"
                            viewBox="0 0 16 16"
                            width={16}
                            xmlns="http://www.w3.org/2000/svg"
                          >
                            <path
                              d="M8 11L3 6 3.7 5.3 8 9.6 12.3 5.3 13 6z"
                            />
                          </svg>
                        </div>
                      </div>
                    </div>
                  </div>
                  <span
                    className="bx--pagination__text"
                  >
                    1 of 2 pages
                  </span>
                  <div
                    className="bx--pagination__control-buttons"
                  >
                    <button
                      aria-describedby={null}
                      className="bx--pagination__button bx--pagination__button--backward bx--pagination__button--no-index bx--btn bx--btn--ghost bx--btn--disabled bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--top bx--tooltip--align-center"
                      disabled={true}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <div
                        className="bx--assistive-text"
                        onMouseEnter={[Function]}
                      >
                        Previous page
                      </div>
                      <svg
                        aria-hidden="true"
                        aria-label="Previous page"
                        className="bx--btn__icon"
                        fill="currentColor"
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        viewBox="0 0 32 32"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M20 24L10 16 20 8z"
                        />
                      </svg>
                    </button>
                    <button
                      aria-describedby={null}
                      className="bx--pagination__button bx--pagination__button--forward bx--btn bx--btn--ghost bx--tooltip--hidden bx--btn--icon-only bx--tooltip__trigger bx--tooltip--a11y bx--btn--icon-only--top bx--tooltip--align-end"
                      disabled={false}
                      onBlur={[Function]}
                      onClick={[Function]}
                      onFocus={[Function]}
                      onMouseEnter={[Function]}
                      onMouseLeave={[Function]}
                      tabIndex={0}
                      type="button"
                    >
                      <div
                        className="bx--assistive-text"
                        onMouseEnter={[Function]}
                      >
                        Next page
                      </div>
                      <svg
                        aria-hidden="true"
                        aria-label="Next page"
                        className="bx--btn__icon"
                        fill="currentColor"
                        focusable="false"
                        height={16}
                        preserveAspectRatio="xMidYMid meet"
                        role="img"
                        viewBox="0 0 32 32"
                        width={16}
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M12 8L22 16 12 24z"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          accept={null}
          className="iot--card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="Card"
          id="imageCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(648px,480px)",
              "OTransform": "translate(648px,480px)",
              "WebkitTransform": "translate(648px,480px)",
              "height": "624px",
              "msTransform": "translate(648px,480px)",
              "position": "absolute",
              "transform": "translate(648px,480px)",
              "width": "632px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="ImageCard - LARGE"
            >
              <div
                className="iot--card--title--text"
              >
                ImageCard - LARGE
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            >
              <button
                aria-describedby={null}
                aria-pressed={null}
                className="iot--card--toolbar-action iot--card--toolbar-svg-wrapper bx--btn--icon-only iot--btn bx--btn bx--btn--sm bx--btn--ghost"
                data-testid="Card-toolbar-expand-button"
                disabled={false}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onMouseEnter={[Function]}
                onMouseLeave={[Function]}
                tabIndex={0}
                title="Expand to fullscreen"
                type="button"
              >
                <svg
                  aria-hidden="true"
                  aria-label="Expand to fullscreen"
                  className="bx--btn__icon"
                  fill="currentColor"
                  focusable="false"
                  height={16}
                  preserveAspectRatio="xMidYMid meet"
                  role="img"
                  viewBox="0 0 32 32"
                  width={16}
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M28,4H10A2.0059,2.0059,0,0,0,8,6V20a2.0059,2.0059,0,0,0,2,2H28a2.0059,2.0059,0,0,0,2-2V6A2.0059,2.0059,0,0,0,28,4Zm0,16H10V6H28Z"
                  />
                  <path
                    d="M18,26H4V16H6V14H4a2.0059,2.0059,0,0,0-2,2V26a2.0059,2.0059,0,0,0,2,2H18a2.0059,2.0059,0,0,0,2-2V24H18Z"
                  />
                </svg>
              </button>
            </div>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <div
              className="iot--image-card__wrapper"
            >
              <div
                onBlur={[Function]}
                onMouseOut={[Function]}
                style={
                  Object {
                    "background": "#eee",
                    "height": "100%",
                    "overflow": "hidden",
                    "position": "relative",
                    "textAlign": "center",
                    "width": "100%",
                  }
                }
              >
                <img
                  alt="Sample image"
                  className="iot--image-card-img"
                  id={null}
                  onLoad={[Function]}
                  onMouseDown={[Function]}
                  onMouseMove={[Function]}
                  onMouseUp={[Function]}
                  src="static/media/landscape.013ce39d.jpg"
                  style={
                    Object {
                      "cursor": "auto",
                      "height": "auto",
                      "left": undefined,
                      "objectFit": null,
                      "position": "relative",
                      "top": undefined,
                      "width": "auto",
                    }
                  }
                />
                <div
                  data-testid="null-hotspots-container"
                  style={
                    Object {
                      "left": undefined,
                      "margin": "auto",
                      "pointerEvents": "none",
                      "position": "absolute",
                      "right": "auto",
                    }
                  }
                >
                  <div
                    className="iot--hotspot-container iot--hotspot-container--has-icon iot--hotspot-container--is-fixed"
                    data-testid="hotspot-35-65"
                    icon="arrowDown"
                    style={
                      Object {
                        "--height": 25,
                        "--width": 25,
                        "--x-pos": 35,
                        "--y-pos": 65,
                      }
                    }
                  >
                    <div
                      aria-labelledby="hotspot-35-65"
                      className="bx--tooltip__label"
                      id="hotspot-35-65"
                      onBlur={[Function]}
                      onClick={[Function]}
                      onContextMenu={[Function]}
                      onFocus={[Function]}
                      onKeyDown={[Function]}
                      onMouseOut={[Function]}
                      onMouseOver={[Function]}
                      role="button"
                      tabIndex={0}
                    >
                      <div
                        style={
                          Object {
                            "color": "purple",
                          }
                        }
                      >
                        <svg
                          data-testid="card-icon"
                          fill="purple"
                          focusable="true"
                          height={25}
                          preserveAspectRatio="xMidYMid meet"
                          role="img"
                          tabIndex="0"
                          title="Warning"
                          viewBox="0 0 32 32"
                          width={25}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <path
                            d="M16,2A14,14,0,1,0,30,16,14,14,0,0,0,16,2Zm0,26A12,12,0,1,1,28,16,12,12,0,0,1,16,28Z"
                          />
                          <path
                            d="M15 8H17V19H15zM16 22a1.5 1.5 0 101.5 1.5A1.5 1.5 0 0016 22z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  style={
                    Object {
                      "bottom": 10,
                      "pointerEvents": "auto",
                      "position": "absolute",
                      "right": 10,
                    }
                  }
                >
                  <button
                    onClick={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "background": "#fff",
                        "border": "none",
                        "boxShadow": "0px 0px 2px 0px rgba(0,0,0,0.5)",
                        "display": "flex",
                        "height": "25px",
                        "justifyContent": "center",
                        "width": "25px",
                      }
                    }
                    title="Zoom in"
                    type="button"
                  >
                    +
                  </button>
                  <button
                    onClick={[Function]}
                    style={
                      Object {
                        "alignItems": "center",
                        "background": "#fff",
                        "border": "none",
                        "boxShadow": "0px 0px 2px 0px rgba(0,0,0,0.5)",
                        "display": "flex",
                        "height": "25px",
                        "justifyContent": "center",
                        "width": "25px",
                      }
                    }
                    title="Zoom out"
                    type="button"
                  >
                    -
                  </button>
                </div>
              </div>
            </div>
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="Card"
          id="timeSeriesCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(0px,1760px)",
              "OTransform": "translate(0px,1760px)",
              "WebkitTransform": "translate(0px,1760px)",
              "height": "624px",
              "msTransform": "translate(0px,1760px)",
              "position": "absolute",
              "transform": "translate(0px,1760px)",
              "width": "308px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="TimeSeriesCard - LARGETHIN"
            >
              <div
                className="iot--card--title--text"
              >
                TimeSeriesCard - LARGETHIN
              </div>
            </span>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <div
              className="iot--time-series-card--wrapper"
            >
              <div
                id="mock-line-chart"
              />
            </div>
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card iot--card--wrapper"
          data-testid="Card"
          id="listCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onScroll={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(324px,2400px)",
              "OTransform": "translate(324px,2400px)",
              "WebkitTransform": "translate(324px,2400px)",
              "height": "624px",
              "msTransform": "translate(324px,2400px)",
              "position": "absolute",
              "transform": "translate(324px,2400px)",
              "width": "308px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="ListCard - LARGETHIN"
            >
              <div
                className="iot--card--title--text"
              >
                ListCard - LARGETHIN
              </div>
            </span>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <div
              className="list-card react-grid-item cssTransforms react-resizable"
              style={
                Object {
                  "paddingBottom": 0,
                  "paddingLeft": 16,
                  "paddingRight": 16,
                  "paddingTop": 0,
                }
              }
            >
              <div
                aria-label="Structured list section"
                className="bx--structured-list"
                role="table"
              >
                <div
                  className="bx--structured-list-tbody"
                  data-testid="Card-list-body"
                  onKeyDown={[Function]}
                  role="rowgroup"
                >
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        <a
                          className="bx--link"
                          href="https://internetofthings.ibmcloud.com/"
                          rel="noopener"
                          style={
                            Object {
                              "display": "inherit",
                            }
                          }
                          target="_blank"
                        >
                          Row content 1
                        </a>
                      </div>
                    </div>
                  </div>
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        <a
                          className="bx--link"
                          href="https://internetofthings.ibmcloud.com/"
                          rel="noopener"
                          style={
                            Object {
                              "display": "inherit",
                            }
                          }
                          target="_blank"
                        >
                          Row content 2
                        </a>
                      </div>
                    </div>
                  </div>
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        Row content 3
                      </div>
                    </div>
                  </div>
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        <a
                          className="bx--link"
                          href="https://internetofthings.ibmcloud.com/"
                          rel="noopener"
                          style={
                            Object {
                              "display": "inherit",
                            }
                          }
                          target="_blank"
                        >
                          Row content 4
                        </a>
                      </div>
                      <div
                        className="list-card--item--extra-content"
                      >
                        <svg
                          height="10"
                          width="30"
                        >
                          <circle
                            cx="5"
                            cy="5"
                            fill="red"
                            r="3"
                            stroke="none"
                            strokeWidth="1"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        Row content 5
                      </div>
                    </div>
                  </div>
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        Row content 6
                      </div>
                    </div>
                  </div>
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        Row content 7
                      </div>
                    </div>
                  </div>
                  <div
                    className="bx--structured-list-row"
                    role="row"
                  >
                    <div
                      className="list-card--item bx--structured-list-td"
                      role="cell"
                    >
                      <div
                        className="list-card--item--value"
                      >
                        Row content 8
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable iot--bar-chart-card iot--card--wrapper"
          data-testid="Card"
          id="barChartCard"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "624px",
              "MozTransform": "translate(0px,3040px)",
              "OTransform": "translate(0px,3040px)",
              "WebkitTransform": "translate(0px,3040px)",
              "height": "624px",
              "msTransform": "translate(0px,3040px)",
              "position": "absolute",
              "transform": "translate(0px,3040px)",
              "width": "1280px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="BarChartCard - LARGEWIDE"
            >
              <div
                className="iot--card--title--text"
              >
                BarChartCard - LARGEWIDE
              </div>
            </span>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "576px",
              }
            }
          >
            <div
              className="iot--bar-chart-container"
            >
              <div
                id="mock-bar-chart-simple"
              />
            </div>
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots 1 - Watson IoT/Dashboard Grid dashboard, custom layout 1`] = `
<div
  className="storybook-container"
>
  Passes a custom layout to the dashboard grid. Only the lg and md breakpoint have a custom layout defined. Resize the screen to see the cards reposition and resize themselves at different layouts.
  <div
    style={
      Object {
        "width": "calc(100vw - 6rem)",
      }
    }
  >
    <div
      data-testid="dashboard-grid"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <div
        className="react-grid-layout iot--dashboard-grid"
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": "624px",
          }
        }
      >
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          content="My Facility Metrics"
          data-testid="Card"
          id="facility"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "304px",
              "MozTransform": "translate(324px,320px)",
              "OTransform": "translate(324px,320px)",
              "WebkitTransform": "translate(324px,320px)",
              "height": "304px",
              "msTransform": "translate(324px,320px)",
              "position": "absolute",
              "transform": "translate(324px,320px)",
              "width": "632px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Facility Metrics"
            >
              <div
                className="iot--card--title--text"
              >
                Facility Metrics
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "256px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          content="My Humidity Values"
          data-testid="Card"
          id="humidity"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(0px,0px)",
              "OTransform": "translate(0px,0px)",
              "WebkitTransform": "translate(0px,0px)",
              "height": "144px",
              "msTransform": "translate(0px,0px)",
              "position": "absolute",
              "transform": "translate(0px,0px)",
              "width": "308px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Humidity"
            >
              <div
                className="iot--card--title--text"
              >
                Humidity
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          content="My utilization chart"
          data-testid="Card"
          id="utilization"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(243px,160px)",
              "OTransform": "translate(243px,160px)",
              "WebkitTransform": "translate(243px,160px)",
              "height": "144px",
              "msTransform": "translate(243px,160px)",
              "position": "absolute",
              "transform": "translate(243px,160px)",
              "width": "308px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Utilization"
            >
              <div
                className="iot--card--title--text"
              >
                Utilization
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots 1 - Watson IoT/Dashboard Grid dashboard, default layouts 1`] = `
<div
  className="storybook-container"
>
  Resize your window to see the callback handlers get triggered in the Actions tab.
  <div
    style={
      Object {
        "width": "calc(100vw - 6rem)",
      }
    }
  >
    <div
      style={
        Object {
          "display": "flex",
        }
      }
    >
      <div
        style={
          Object {
            "width": "200px",
          }
        }
      >
        Sample sidebar
      </div>
      <div
        data-testid="dashboard-grid"
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <div
          className="react-grid-layout iot--dashboard-grid"
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
          style={
            Object {
              "height": "304px",
            }
          }
        >
          <div
            className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
            content="My Facility Metrics"
            data-testid="Card"
            id="facility"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            role="presentation"
            style={
              Object {
                "--card-default-height": "304px",
                "MozTransform": "translate(0px,0px)",
                "OTransform": "translate(0px,0px)",
                "WebkitTransform": "translate(0px,0px)",
                "height": "304px",
                "msTransform": "translate(0px,0px)",
                "position": "absolute",
                "transform": "translate(0px,0px)",
                "width": "632px",
              }
            }
            type="VALUE"
          >
            <div
              className="iot--card--header"
              data-testid="Card-header"
            >
              <span
                className="iot--card--title"
                data-testid="Card-title"
                title="Facility Metrics"
              >
                <div
                  className="iot--card--title--text"
                >
                  Facility Metrics
                </div>
              </span>
              <div
                className="iot--card--toolbar"
                data-testid="Card-toolbar"
              />
            </div>
            <div
              className="iot--card--content"
              data-testid="Card-content"
              style={
                Object {
                  "--card-content-height": "256px",
                }
              }
            >
              <span
                className="react-resizable-handle react-resizable-handle-se"
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "touchAction": "none",
                  }
                }
              />
            </div>
          </div>
          <div
            className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
            content="My Humidity Values"
            data-testid="Card"
            id="humidity"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            role="presentation"
            style={
              Object {
                "--card-default-height": "144px",
                "MozTransform": "translate(648px,0px)",
                "OTransform": "translate(648px,0px)",
                "WebkitTransform": "translate(648px,0px)",
                "height": "144px",
                "msTransform": "translate(648px,0px)",
                "position": "absolute",
                "transform": "translate(648px,0px)",
                "width": "308px",
              }
            }
            type="VALUE"
          >
            <div
              className="iot--card--header"
              data-testid="Card-header"
            >
              <span
                className="iot--card--title"
                data-testid="Card-title"
                title="Humidity"
              >
                <div
                  className="iot--card--title--text"
                >
                  Humidity
                </div>
              </span>
              <div
                className="iot--card--toolbar"
                data-testid="Card-toolbar"
              />
            </div>
            <div
              className="iot--card--content"
              data-testid="Card-content"
              style={
                Object {
                  "--card-content-height": "96px",
                }
              }
            >
              <span
                className="react-resizable-handle react-resizable-handle-se"
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "touchAction": "none",
                  }
                }
              />
            </div>
          </div>
          <div
            className="iot--card react-grid-item cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
            content="My utilization chart"
            data-testid="Card"
            id="utilization"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            role="presentation"
            style={
              Object {
                "--card-default-height": "144px",
                "MozTransform": "translate(972px,0px)",
                "OTransform": "translate(972px,0px)",
                "WebkitTransform": "translate(972px,0px)",
                "height": "144px",
                "msTransform": "translate(972px,0px)",
                "position": "absolute",
                "transform": "translate(972px,0px)",
                "width": "308px",
              }
            }
            type="VALUE"
          >
            <div
              className="iot--card--header"
              data-testid="Card-header"
            >
              <span
                className="iot--card--title"
                data-testid="Card-title"
                title="Utilization"
              >
                <div
                  className="iot--card--title--text"
                >
                  Utilization
                </div>
              </span>
              <div
                className="iot--card--toolbar"
                data-testid="Card-toolbar"
              />
            </div>
            <div
              className="iot--card--content"
              data-testid="Card-content"
              style={
                Object {
                  "--card-content-height": "96px",
                }
              }
            >
              <span
                className="react-resizable-handle react-resizable-handle-se"
                onMouseDown={[Function]}
                onMouseUp={[Function]}
                onTouchEnd={[Function]}
                onTouchStart={[Function]}
                style={
                  Object {
                    "touchAction": "none",
                  }
                }
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots 1 - Watson IoT/Dashboard Grid dashboard, is Editable 1`] = `
<div
  className="storybook-container"
>
  You can drag and drop the cards around. Watch the handler get triggered on the Actions tab.
  <div
    style={
      Object {
        "width": "calc(100vw - 6rem)",
      }
    }
  >
    <div
      data-testid="dashboard-grid"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <div
        className="react-grid-layout iot--dashboard-grid"
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": "304px",
          }
        }
      >
        <div
          className="iot--card react-grid-item react-draggable cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          content="My Facility Metrics"
          data-testid="Card"
          id="facility"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "304px",
              "MozTransform": "translate(0px,0px)",
              "OTransform": "translate(0px,0px)",
              "WebkitTransform": "translate(0px,0px)",
              "height": "304px",
              "msTransform": "translate(0px,0px)",
              "position": "absolute",
              "transform": "translate(0px,0px)",
              "width": "632px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Facility Metrics"
            >
              <div
                className="iot--card--title--text"
              >
                Facility Metrics
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "256px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item react-draggable cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          content="My Humidity Values"
          data-testid="Card"
          id="humidity"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(648px,0px)",
              "OTransform": "translate(648px,0px)",
              "WebkitTransform": "translate(648px,0px)",
              "height": "144px",
              "msTransform": "translate(648px,0px)",
              "position": "absolute",
              "transform": "translate(648px,0px)",
              "width": "308px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Humidity"
            >
              <div
                className="iot--card--title--text"
              >
                Humidity
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
        <div
          className="iot--card react-grid-item react-draggable cssTransforms react-resizable-hide react-resizable iot--card--wrapper"
          content="My utilization chart"
          data-testid="Card"
          id="utilization"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(972px,0px)",
              "OTransform": "translate(972px,0px)",
              "WebkitTransform": "translate(972px,0px)",
              "height": "144px",
              "msTransform": "translate(972px,0px)",
              "position": "absolute",
              "transform": "translate(972px,0px)",
              "width": "308px",
            }
          }
          type="VALUE"
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Utilization"
            >
              <div
                className="iot--card--title--text"
              >
                Utilization
              </div>
            </span>
            <div
              className="iot--card--toolbar"
              data-testid="Card-toolbar"
            />
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storybook Snapshot tests and console checks Storyshots 1 - Watson IoT/Dashboard Grid dashboard, resizable card 1`] = `
<div
  className="storybook-container"
>
  The card is resizable by dragging and the card size prop is automatically updated to match the new size during the drag process.
  <div
    style={
      Object {
        "width": "calc(100vw - 6rem)",
      }
    }
  >
    <div
      data-testid="dashboard-grid"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <div
        className="react-grid-layout iot--dashboard-grid"
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "height": "144px",
          }
        }
      >
        <div
          className="iot--card react-grid-item cssTransforms react-resizable iot--card--wrapper"
          data-testid="Card"
          id="card"
          onMouseDown={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          role="presentation"
          style={
            Object {
              "--card-default-height": "144px",
              "MozTransform": "translate(0px,0px)",
              "OTransform": "translate(0px,0px)",
              "WebkitTransform": "translate(0px,0px)",
              "height": "144px",
              "msTransform": "translate(0px,0px)",
              "position": "absolute",
              "transform": "translate(0px,0px)",
              "width": "308px",
            }
          }
        >
          <div
            className="iot--card--header"
            data-testid="Card-header"
          >
            <span
              className="iot--card--title"
              data-testid="Card-title"
              title="Card - SMALL"
            >
              <div
                className="iot--card--title--text"
              >
                Card - SMALL
              </div>
            </span>
          </div>
          <div
            className="iot--card--content"
            data-testid="Card-content"
            style={
              Object {
                "--card-content-height": "96px",
              }
            }
          >
            <span
              className="react-resizable-handle react-resizable-handle-se"
              onMouseDown={[Function]}
              onMouseUp={[Function]}
              onTouchEnd={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "touchAction": "none",
                }
              }
            />
          </div>
          <span
            className="react-resizable-handle react-resizable-handle-se"
            onMouseDown={[Function]}
            onMouseUp={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "touchAction": "none",
              }
            }
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;
